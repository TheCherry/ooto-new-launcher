class Behavior {
    constructor() {
        this.id = this.constructor.name;
    }

    template(parent, api, emulator, data) {
        if (data.hasOwnProperty("filter")) {
            parent.api.computeActor(data.actor + "|" + data.offset, data.actorid, parent.api.actorCategories[data.actorCategory], data.offset, data.readHandler, data.size, data.filter);
        } else {
            parent.api.computeActor(data.actor + "|" + data.offset, data.actorid, parent.api.actorCategories[data.actorCategory], data.offset, data.readHandler, data.size);
        }

        api.registerClientSidePacketHook(data.actor + "|" + data.offset, function (packet) {
            if (parent._forbidSync) {
                return false;
            }
            packet.addr = packet.data.hash;
            packet.offset = data.offset;
            if (data.hasOwnProperty("value")) {
                packet.data = data.value;
            } else {
                packet.data = packet.data.value;
            }
            packet.writeHandler = data.writeHandler;
            console.log(packet);
            return true;
        });

        api.registerPacketTransformer(data.actor + "|" + data.offset, function (packet) {
            if (parent._forbidSync) {
                return false;
            }
            return packet;
        });
    }
}

module.exports = new Behavior();